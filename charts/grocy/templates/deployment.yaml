apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grocy.fullname" . }}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    app.kubernetes.io/name: {{ include "grocy.name" . }}
    helm.sh/chart: {{ include "grocy.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "grocy.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "grocy.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          env:
            - name: TZ
              value: "{{ .Values.timezone }}"
            - name: PUID
              value: "{{ .Values.puid }}"
            - name: PGID
              value: "{{ .Values.pgid }}"
            {{ - if .Values.dockerMods }}
            - name: DOCKER_MODS
              value: "{{ .Values.dockerMods }}"
            {{- end }}
          volumeMounts:
            - mountPath: /config
              name: config
              {{- if .Values.persistence.config.subPath }}
              subPath: "{{ .Values.persistence.config.subPath }}"
              {{- end }}              
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: config
      {{- if .Values.persistence.config.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.config.existingClaim }}{{ .Values.persistence.config.existingClaim }}{{- else }}{{ template "grocy.fullname" . }}-config{{- end }}
      {{- else }}
        emptyDir: {}
      {{ end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
